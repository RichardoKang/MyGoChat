// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.20.3
// source: message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Avatar        string                 `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`            //头像
	SenderName    string                 `protobuf:"bytes,2,opt,name=senderName,proto3" json:"senderName,omitempty"`    // 发送消息用户的用户名
	SenderID      uint32                 `protobuf:"varint,3,opt,name=senderID,proto3" json:"senderID,omitempty"`       // 发送消息用户ID
	RecipientId   uint32                 `protobuf:"varint,4,opt,name=recipientId,proto3" json:"recipientId,omitempty"` // 接收消息用户ID
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`          // 文本消息内容
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                // 消息传输类型：如果是心跳消息，该内容为heatbeat,在线视频或者音频为webrtc
	ContentType   int32                  `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"` // 消息内容类型：1.文字 2.普通文件 3.图片 4.音频 5.视频 6.语音聊天 7.视频聊天
	MessageType   int32                  `protobuf:"varint,8,opt,name=messageType,proto3" json:"messageType,omitempty"` // 消息类型，1.单聊 2.群聊
	Url           string                 `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`                  // 图片，视频，语音的路径
	Uuid          string                 `protobuf:"bytes,12,opt,name=uuid,proto3" json:"uuid,omitempty"`               // 消息唯一ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Message) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Message) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *Message) GetRecipientId() uint32 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Message) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Message) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *Message) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Message) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

const file_message_proto_rawDesc = "" +
	"\n" +
	"\rmessage.proto\x12\x02v1\"\x97\x02\n" +
	"\aMessage\x12\x16\n" +
	"\x06avatar\x18\x01 \x01(\tR\x06avatar\x12\x1e\n" +
	"\n" +
	"senderName\x18\x02 \x01(\tR\n" +
	"senderName\x12\x1a\n" +
	"\bsenderID\x18\x03 \x01(\rR\bsenderID\x12 \n" +
	"\vrecipientId\x18\x04 \x01(\rR\vrecipientId\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12 \n" +
	"\vcontentType\x18\x06 \x01(\x05R\vcontentType\x12 \n" +
	"\vmessageType\x18\b \x01(\x05R\vmessageType\x12\x10\n" +
	"\x03url\x18\t \x01(\tR\x03url\x12\x12\n" +
	"\x04uuid\x18\f \x01(\tR\x04uuidB\x17Z\x15MyGoChat/pkg/pb/v1;pbb\x06proto3"

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData []byte
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)))
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_proto_goTypes = []any{
	(*Message)(nil), // 0: v1.Message
}
var file_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
